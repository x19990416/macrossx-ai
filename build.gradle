apply plugin: "java"
apply plugin: "maven"

group = "com.github.x19990416"
version='1.0-SNAPSHOT'
sourceCompatibility = 1.8

targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/groups/public"}
    
}

task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = baseName + "-$set.name"
        from set.output
    }

    artifacts {
        archives jarTask
    }
}

sourceSets {
	groovyTemplate
	wechat
	push
}

jar {
    from sourceSets.groovyTemplate.output
 //   from sourceSets.impl.output
}

dependencies {
	compile 'org.projectlombok:lombok:1.16.6'
	compile 'com.hankcs:hanlp:portable-1.2.2'
	compile 'com.google.guava:guava:18.0'
}

uploadArchives {
    repositories {
        mavenDeployer {
			repository(url: 'https://oss.sonatype.org/content/repositories/snapshots'){
			authentication(userName: 'x19990416', password: 'Forever')}

           ["chatbotx"].each { type ->
                addFilter(type) { artifact, file -> artifact.name.endsWith("-$type") }
                // We now have to map our configurations to the correct maven scope for each pom
            }

        }
    }
}

/*
uploadArchives {
    repositories {
        mavenDeployer {
			repository(url: 'http://180.166.28.123:8081/nexus/content/repositories/snapshots'){
			authentication(userName: 'deployment', password: 'deployment')}

           ["groovyTemplate"].each { type ->
                addFilter(type) { artifact, file -> artifact.name.endsWith("-$type") }
                // We now have to map our configurations to the correct maven scope for each pom
            }
           
            ["wechat"].each { type ->
                addFilter(type) { artifact, file -> artifact.name.endsWith("-$type") }
                // We now have to map our configurations to the correct maven scope for each pom
            }

        }
    }
}*/
